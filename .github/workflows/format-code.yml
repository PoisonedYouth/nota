name: Format Code

on:
  workflow_dispatch:
  issue_comment:
    types: [created]

env:
  JAVA_VERSION: '21'
  JAVA_DISTRIBUTION: 'corretto'

jobs:
  format:
    name: Format Code
    runs-on: ubuntu-latest
    # Only run on PRs when comment contains "/format"
    if: |
      github.event_name == 'workflow_dispatch' || 
      (github.event.issue.pull_request && contains(github.event.comment.body, '/format'))
    
    steps:
    - name: Get PR info
      if: github.event_name == 'issue_comment'
      uses: actions/github-script@v7
      id: get-pr
      with:
        script: |
          const request = {
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          }
          core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
          try {
            const result = await github.rest.pulls.get(request)
            return result.data
          } catch (err) {
            core.setFailed(`Request failed with error ${err}`)
          }
    
    - name: Checkout PR code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
        ref: ${{ github.event.pull_request.head.ref || github.ref }}
        fetch-depth: 0
    
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.JAVA_DISTRIBUTION }}
        
    - name: Install ktlint
      run: |
        curl -sSLO https://github.com/pinterest/ktlint/releases/download/1.6.0/ktlint
        chmod +x ktlint
        sudo mv ktlint /usr/local/bin/
        
    - name: Install detekt
      run: |
        mkdir -p tools
        cd tools
        curl -sSLO https://github.com/detekt/detekt/releases/download/v1.23.8/detekt-cli-1.23.8-all.jar
        chmod +x detekt-cli-1.23.8-all.jar
        cd -
        
    - name: Format code with ktlint
      run: |
        echo "Formatting Kotlin code with ktlint..."
        ktlint --format "src/**/*.kt" "test/**/*.kt" || true
        
    - name: Auto-fix detekt issues
      run: |
        echo "Auto-fixing detekt issues..."
        java -jar tools/detekt-cli-1.23.8-all.jar \
          --config tools/default-detekt-config.yml \
          --input src/ \
          --auto-correct || true
        
    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "Files were formatted"
          git diff --name-only
        else
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "No formatting changes needed"
        fi
        
    - name: Commit changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "style: Auto-format code with ktlint and detekt

        🤖 Generated with [Claude Code](https://claude.ai/code)
        
        Co-Authored-By: Claude <noreply@anthropic.com>" || exit 0
        
    - name: Push changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.event.pull_request.head.ref || github.ref }}
        
    - name: Add reaction to comment
      if: github.event_name == 'issue_comment' && steps.verify-changed-files.outputs.changed == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.reactions.createForIssueComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            comment_id: context.payload.comment.id,
            content: '+1'
          })
          
    - name: Comment on PR with results
      if: github.event_name == 'issue_comment'
      uses: actions/github-script@v7
      with:
        script: |
          const changed = '${{ steps.verify-changed-files.outputs.changed }}' === 'true'
          const body = changed 
            ? '✅ Code has been formatted automatically. The changes have been pushed to this PR.'
            : '✅ Code is already properly formatted. No changes needed.'
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: body
          })
          
    - name: Build summary
      run: |
        if [ "${{ steps.verify-changed-files.outputs.changed }}" = "true" ]; then
          echo "## ✅ Code Formatted Successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔧 Changes Applied" >> $GITHUB_STEP_SUMMARY
          echo "- ktlint formatting applied to Kotlin files" >> $GITHUB_STEP_SUMMARY
          echo "- detekt auto-corrections applied where possible" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📝 Files Modified" >> $GITHUB_STEP_SUMMARY
          git diff --name-only HEAD~1 | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
        else
          echo "## ✅ Code Already Properly Formatted" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "No formatting changes were needed." >> $GITHUB_STEP_SUMMARY
        fi